{"ast":null,"code":"var _jsxFileName = \"/Users/jero/Documents/GitHub/directdesignlab.github.io/src/pages/TypeThon/TypeThonHome.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport './TypeThonHome.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TypeThonHome() {\n  _s();\n  const [typeThonList, setTypeThonList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const containerRef = useRef(null);\n  const requestRef = useRef(null);\n  const scrollSpeed = 0.08; // 스크롤 속도 조절\n  const dampingFactor = 0.9; // 감속 계수\n  const itemSpacing = 200; // 텍스트 간의 간격 (픽셀)\n  const circleRadius = 600; // 원의 반지름 (픽셀)\n  const displayAngle = 240; // 텍스트들이 배치될 각도 범위\n\n  useEffect(() => {\n    import('../../data/typeThon/typeThonList.json').then(module => {\n      const data = module.default;\n      console.log('Loaded data:', data);\n      if (Array.isArray(data)) {\n        setTypeThonList(data);\n      } else {\n        setError('Fetched data is not an array');\n      }\n    }).catch(error => {\n      setError('Error loading JSON data');\n      console.error(error);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n  const maxScroll = (typeThonList.length - 1) * itemSpacing; // 스크롤 최대 값 계산\n\n  useEffect(() => {\n    const handleWheel = event => {\n      event.preventDefault();\n      setScrollPosition(prevPosition => {\n        const newPosition = prevPosition + event.deltaY * scrollSpeed;\n        // 스크롤 범위를 0에서 maxScroll로 제한하여 첫 텍스트에서 마지막 텍스트로만 스크롤 가능하도록 함\n        return Math.min(Math.max(newPosition, 0), maxScroll);\n      });\n    };\n    window.addEventListener('wheel', handleWheel, {\n      passive: false\n    });\n    return () => {\n      window.removeEventListener('wheel', handleWheel);\n    };\n  }, [maxScroll]);\n  const animateScroll = () => {\n    setScrollPosition(prevPosition => {\n      const newPosition = prevPosition * dampingFactor;\n      if (Math.abs(newPosition) < 0.01) {\n        cancelAnimationFrame(requestRef.current);\n        return 0;\n      }\n      return newPosition;\n    });\n    requestRef.current = requestAnimationFrame(animateScroll);\n  };\n  useEffect(() => {\n    if (containerRef.current) {\n      const anglePerItem = displayAngle / Math.max(1, typeThonList.length - 1); // 각 텍스트 간의 각도 계산\n\n      typeThonList.forEach((item, index) => {\n        const angle = (index * anglePerItem - scrollPosition / itemSpacing * anglePerItem) % 360;\n        const radians = angle * Math.PI / 180;\n        const x = circleRadius * Math.cos(radians);\n        const y = circleRadius * Math.sin(radians);\n        const element = containerRef.current.children[index];\n        element.style.transform = `translate(${x}px, ${y}px) rotate(${angle}deg) translateX(calc(-100% - 10px))`; // 텍스트 간격 조정\n\n        // 선택된 텍스트가 우측에 위치하도록 설정\n        if (Math.abs(angle % 360) < anglePerItem / 2) {\n          element.classList.add('active');\n          element.classList.remove('inactive');\n        } else {\n          element.classList.remove('active');\n          element.classList.add('inactive');\n        }\n\n        // 디버깅용 콘솔 로그 추가\n        console.log(`Element ${index}: x=${x}, y=${y}, angle=${angle}`);\n      });\n    }\n  }, [typeThonList, scrollPosition]);\n  useEffect(() => {\n    requestRef.current = requestAnimationFrame(animateScroll);\n    return () => cancelAnimationFrame(requestRef.current);\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"type-thon-home\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"type-thon-container\",\n      ref: containerRef,\n      children: typeThonList.map((topic, index) => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/type-thon/${topic.id}`,\n        className: \"inactive\",\n        children: topic.title\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(TypeThonHome, \"TcfNqeea3h0dDb2T+xcHXwq8zIM=\");\n_c = TypeThonHome;\nexport default TypeThonHome;\nvar _c;\n$RefreshReg$(_c, \"TypeThonHome\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Link","jsxDEV","_jsxDEV","TypeThonHome","_s","typeThonList","setTypeThonList","loading","setLoading","error","setError","scrollPosition","setScrollPosition","containerRef","requestRef","scrollSpeed","dampingFactor","itemSpacing","circleRadius","displayAngle","then","module","data","default","console","log","Array","isArray","catch","finally","maxScroll","length","handleWheel","event","preventDefault","prevPosition","newPosition","deltaY","Math","min","max","window","addEventListener","passive","removeEventListener","animateScroll","abs","cancelAnimationFrame","current","requestAnimationFrame","anglePerItem","forEach","item","index","angle","radians","PI","x","cos","y","sin","element","children","style","transform","classList","add","remove","fileName","_jsxFileName","lineNumber","columnNumber","className","ref","map","topic","to","id","title","_c","$RefreshReg$"],"sources":["/Users/jero/Documents/GitHub/directdesignlab.github.io/src/pages/TypeThon/TypeThonHome.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport './TypeThonHome.css';\n\nfunction TypeThonHome() {\n  const [typeThonList, setTypeThonList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const containerRef = useRef(null);\n  const requestRef = useRef(null);\n  const scrollSpeed = 0.08; // 스크롤 속도 조절\n  const dampingFactor = 0.9; // 감속 계수\n  const itemSpacing = 200; // 텍스트 간의 간격 (픽셀)\n  const circleRadius = 600; // 원의 반지름 (픽셀)\n  const displayAngle = 240; // 텍스트들이 배치될 각도 범위\n\n  useEffect(() => {\n    import('../../data/typeThon/typeThonList.json')\n      .then((module) => {\n        const data = module.default;\n        console.log('Loaded data:', data);\n        if (Array.isArray(data)) {\n          setTypeThonList(data);\n        } else {\n          setError('Fetched data is not an array');\n        }\n      })\n      .catch((error) => {\n        setError('Error loading JSON data');\n        console.error(error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  const maxScroll = (typeThonList.length - 1) * itemSpacing; // 스크롤 최대 값 계산\n\n  useEffect(() => {\n    const handleWheel = (event) => {\n      event.preventDefault();\n      setScrollPosition((prevPosition) => {\n        const newPosition = prevPosition + event.deltaY * scrollSpeed;\n        // 스크롤 범위를 0에서 maxScroll로 제한하여 첫 텍스트에서 마지막 텍스트로만 스크롤 가능하도록 함\n        return Math.min(Math.max(newPosition, 0), maxScroll);\n      });\n    };\n\n    window.addEventListener('wheel', handleWheel, { passive: false });\n    return () => {\n      window.removeEventListener('wheel', handleWheel);\n    };\n  }, [maxScroll]);\n\n  const animateScroll = () => {\n    setScrollPosition((prevPosition) => {\n      const newPosition = prevPosition * dampingFactor;\n      if (Math.abs(newPosition) < 0.01) {\n        cancelAnimationFrame(requestRef.current);\n        return 0;\n      }\n      return newPosition;\n    });\n\n    requestRef.current = requestAnimationFrame(animateScroll);\n  };\n\n  useEffect(() => {\n    if (containerRef.current) {\n      const anglePerItem = displayAngle / Math.max(1, (typeThonList.length - 1)); // 각 텍스트 간의 각도 계산\n\n      typeThonList.forEach((item, index) => {\n        const angle = (index * anglePerItem - scrollPosition / itemSpacing * anglePerItem) % 360;\n        const radians = (angle * Math.PI) / 180;\n        const x = circleRadius * Math.cos(radians);\n        const y = circleRadius * Math.sin(radians);\n\n        const element = containerRef.current.children[index];\n        element.style.transform = `translate(${x}px, ${y}px) rotate(${angle}deg) translateX(calc(-100% - 10px))`; // 텍스트 간격 조정\n\n        // 선택된 텍스트가 우측에 위치하도록 설정\n        if (Math.abs(angle % 360) < anglePerItem / 2) {\n          element.classList.add('active');\n          element.classList.remove('inactive');\n        } else {\n          element.classList.remove('active');\n          element.classList.add('inactive');\n        }\n\n        // 디버깅용 콘솔 로그 추가\n        console.log(`Element ${index}: x=${x}, y=${y}, angle=${angle}`);\n      });\n    }\n  }, [typeThonList, scrollPosition]);\n\n  useEffect(() => {\n    requestRef.current = requestAnimationFrame(animateScroll);\n    return () => cancelAnimationFrame(requestRef.current);\n  }, []);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>{error}</div>;\n  }\n\n  return (\n    <div className=\"type-thon-home\">\n      <div className=\"type-thon-container\" ref={containerRef}>\n        {typeThonList.map((topic, index) => (\n          <Link key={index} to={`/type-thon/${topic.id}`} className=\"inactive\">\n            {topic.title}\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default TypeThonHome;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}