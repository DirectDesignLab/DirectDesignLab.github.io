{"ast":null,"code":"var _jsxFileName = \"/Users/jero/Documents/GitHub/directdesignlab.github.io/src/pages/TypeThon/TypeThonHome.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport './TypeThonHome.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TypeThonHome() {\n  _s();\n  const [typeThonList, setTypeThonList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const containerRef = useRef(null);\n  useEffect(() => {\n    import('../../data/typeThon/typeThonList.json').then(module => {\n      const data = module.default;\n      console.log('Loaded data:', data);\n      if (Array.isArray(data)) {\n        setTypeThonList(data);\n      } else {\n        setError('Fetched data is not an array');\n      }\n    }).catch(error => {\n      setError('Error loading JSON data');\n      console.error(error);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n  useEffect(() => {\n    const handleWheel = event => {\n      event.preventDefault();\n      const delta = Math.sign(event.deltaY);\n      setActiveIndex(prevIndex => {\n        let newIndex = prevIndex + delta;\n        if (newIndex < 0) newIndex = typeThonList.length - 1; // 무한 스크롤\n        if (newIndex >= typeThonList.length) newIndex = 0; // 무한 스크롤\n        return newIndex;\n      });\n    };\n    window.addEventListener('wheel', handleWheel, {\n      passive: false\n    });\n    return () => {\n      window.removeEventListener('wheel', handleWheel);\n    };\n  }, [typeThonList]);\n  useEffect(() => {\n    const anglePerItem = 360 / typeThonList.length;\n    const radius = 200; // 원의 반지름\n    const offset = -anglePerItem * activeIndex; // 활성화된 항목을 중앙에 배치\n\n    typeThonList.forEach((item, index) => {\n      const angle = anglePerItem * index + offset;\n      const radians = angle * Math.PI / 180;\n      const x = radius * Math.cos(radians);\n      const z = radius * Math.sin(radians); // z축 대신 y축을 사용하여 원형 배치\n\n      const element = containerRef.current.children[index];\n      element.style.transform = `translateX(${x}px) translateZ(${z}px) rotateY(${angle}deg)`;\n    });\n  }, [typeThonList, activeIndex]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"type-thon-home\",\n    ref: containerRef,\n    children: typeThonList.map((topic, index) => /*#__PURE__*/_jsxDEV(Link, {\n      to: `/type-thon/${topic.id}`,\n      className: index === activeIndex ? 'active' : 'inactive',\n      children: topic.title\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(TypeThonHome, \"jzC5MNsPPHPsbKT2VDoux7vc0ok=\");\n_c = TypeThonHome;\nexport default TypeThonHome;\nvar _c;\n$RefreshReg$(_c, \"TypeThonHome\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Link","jsxDEV","_jsxDEV","TypeThonHome","_s","typeThonList","setTypeThonList","loading","setLoading","error","setError","activeIndex","setActiveIndex","containerRef","then","module","data","default","console","log","Array","isArray","catch","finally","handleWheel","event","preventDefault","delta","Math","sign","deltaY","prevIndex","newIndex","length","window","addEventListener","passive","removeEventListener","anglePerItem","radius","offset","forEach","item","index","angle","radians","PI","x","cos","z","sin","element","current","children","style","transform","fileName","_jsxFileName","lineNumber","columnNumber","className","ref","map","topic","to","id","title","_c","$RefreshReg$"],"sources":["/Users/jero/Documents/GitHub/directdesignlab.github.io/src/pages/TypeThon/TypeThonHome.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport './TypeThonHome.css';\n\nfunction TypeThonHome() {\n  const [typeThonList, setTypeThonList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const containerRef = useRef(null);\n\n  useEffect(() => {\n    import('../../data/typeThon/typeThonList.json')\n      .then((module) => {\n        const data = module.default;\n        console.log('Loaded data:', data);\n        if (Array.isArray(data)) {\n          setTypeThonList(data);\n        } else {\n          setError('Fetched data is not an array');\n        }\n      })\n      .catch((error) => {\n        setError('Error loading JSON data');\n        console.error(error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    const handleWheel = (event) => {\n      event.preventDefault();\n      const delta = Math.sign(event.deltaY);\n      setActiveIndex((prevIndex) => {\n        let newIndex = prevIndex + delta;\n        if (newIndex < 0) newIndex = typeThonList.length - 1; // 무한 스크롤\n        if (newIndex >= typeThonList.length) newIndex = 0; // 무한 스크롤\n        return newIndex;\n      });\n    };\n\n    window.addEventListener('wheel', handleWheel, { passive: false });\n    return () => {\n      window.removeEventListener('wheel', handleWheel);\n    };\n  }, [typeThonList]);\n\n  useEffect(() => {\n    const anglePerItem = 360 / typeThonList.length;\n    const radius = 200; // 원의 반지름\n    const offset = -anglePerItem * activeIndex; // 활성화된 항목을 중앙에 배치\n\n    typeThonList.forEach((item, index) => {\n      const angle = anglePerItem * index + offset;\n      const radians = (angle * Math.PI) / 180;\n      const x = radius * Math.cos(radians);\n      const z = radius * Math.sin(radians); // z축 대신 y축을 사용하여 원형 배치\n\n      const element = containerRef.current.children[index];\n      element.style.transform = `translateX(${x}px) translateZ(${z}px) rotateY(${angle}deg)`;\n    });\n  }, [typeThonList, activeIndex]);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>{error}</div>;\n  }\n\n  return (\n    <div className=\"type-thon-home\" ref={containerRef}>\n      {typeThonList.map((topic, index) => (\n        <Link\n          key={index}\n          to={`/type-thon/${topic.id}`}\n          className={index === activeIndex ? 'active' : 'inactive'}\n        >\n          {topic.title}\n        </Link>\n      ))}\n    </div>\n  );\n}\n\nexport default TypeThonHome;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}